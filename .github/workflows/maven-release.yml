name: Maven Release

on:
  workflow_call:
    inputs:
      botName:
        required: true
        type: string
      botEmail:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      GPG_KEY_ID:
        required: true
      GPG_KEY:
        required: true
      MVN_REPO_RELEASE_SERVER_ID:
        required: true
      MVN_REPO_RELEASE_SERVER_USERNAME:
        required: true
      MVN_REPO_RELEASE_SERVER_PASSWORD:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get Java-Version from pom.xml
        id: get-java-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: "pom.xml"
          xpath: '//*[local-name()="maven.compiler.release"]'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.get-java-version.outputs.info }}
          distribution: "adopt"
          cache: "maven"

      - name: Build and verify with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Extract version from pom.xml
        id: extract_gav
        uses: andreacomo/maven-gav-extractor@v1

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ steps.extract_gav.outputs.version }}

      #
      # Release without qcastel/github-actions-maven-release (uncomplete)
      #
      #- name: Install SSH key
      #  uses: shimataro/ssh-key-action@v2
      #  with:
      #    key: ${{ secrets.SSH_PRIVATE_KEY }}
      #    if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      #
      #- name: Import GPG key
      #  uses: crazy-max/ghaction-import-gpg@v6
      #  with:
      #    gpg_private_key: ${{ secrets.GPG_KEY }}
      #
      #- name: Release
      #  if: github.ref == 'refs/heads/main'
      #  env:
      #    JAVA_HOME: /usr/lib/jvm/java-${{ steps.get-java-version.outputs.info }}-openjdk/
      #    MAVEN_GPG_KEY: ${{ secrets.GPG_KEY_ID }}
      # run: |
      #    git config --global user.email "${{ inputs.botEmail }}"
      #    git config --global user.name "${{ inputs.botName }}"
      #    mvn -DstagingProgressTimeoutMinutes=60 -Dspotless.check.skip=true -Dgpg.skip=false --activate-profiles=nexus-staging-release deploy
      #    -Dgpg.skip=false -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=false -Dspotless.check.skip=true -DcompletionGoals=spotless:apply deploy

      #
      # Release (main branch)
      #
      - name: Release
        uses: qcastel/github-actions-maven-release@master
        if: github.ref == 'refs/heads/main'
        env:
          JAVA_HOME: /usr/lib/jvm/java-${{ steps.get-java-version.outputs.info }}-openjdk/
        with:
          git-release-bot-name: ${{ inputs.botName }}
          git-release-bot-email: ${{ inputs.botEmail }}
          release-branch-name: "main"
          version-minor: true

          maven-servers: '[{"id": "${{ secrets.MVN_REPO_RELEASE_SERVER_ID }}", "username": "${{ secrets.MVN_REPO_RELEASE_SERVER_USERNAME }}", "password": "${{ secrets.MVN_REPO_RELEASE_SERVER_PASSWORD }}"}]'
          maven-args: "--activate-profiles=publish-release -Dgpg.skip=false -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=false -Dspotless.check.skip=true -DcompletionGoals=spotless:apply"

          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_KEY }}

      #
      # Hotfix (hotfix/[0-9]i+.[0-9]+.x branch)
      #
      - name: Hotfix
        uses: qcastel/github-actions-maven-release@master
        if: ${{ startsWith(github.ref, 'refs/heads/hotfix/') }}
        env:
          JAVA_HOME: /usr/lib/jvm/java-${{ steps.get-java-version.outputs.info }}-openjdk/
          SKIP_GIT_SANITY_CHECK: true
        with:
          git-release-bot-name: ${{ inputs.botName }}
          git-release-bot-email: ${{ inputs.botEmail }}
          release-branch-name: "${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.x"
          version-patch: true

          maven-args: "--activate-profiles=publish-release -Dgpg.skip=false -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=false -Dspotless.check.skip=true -DcompletionGoals=spotless:apply"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_KEY }}

      #
      # Support-Release (support/[0-9]+.x branch)
      #
      - name: Support-Release
        uses: qcastel/github-actions-maven-release@master
        if: ${{ startsWith(github.ref, 'refs/heads/support/') }}
        env:
          JAVA_HOME: /usr/lib/jvm/java-${{ steps.get-java-version.outputs.info }}-openjdk/
          SKIP_GIT_SANITY_CHECK: true
        with:
          git-release-bot-name: ${{ inputs.botName }}
          git-release-bot-email: ${{ inputs.botEmail }}
          release-branch-name: "${{ steps.semver_parser.outputs.major }}.x"
          version-patch: true

          maven-args: "--activate-profiles=publish-release -Dgpg.skip=false -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=false -Dspotless.check.skip=true -DcompletionGoals=spotless:apply"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_KEY }}
